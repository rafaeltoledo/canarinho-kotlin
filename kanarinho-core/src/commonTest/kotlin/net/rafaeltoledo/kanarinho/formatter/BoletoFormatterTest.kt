package net.rafaeltoledo.kanarinho.formatter

import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertFalse
import kotlin.test.assertTrue

class BoletoFormatterTest {

  private val formatter = BoletoFormatter()

  @Test
  fun `Can format`() {
    assertEquals("12345.12345 12345.123456 12345.123456 7 12345678901234",
      formatter.format("12345123451234512345612345123456712345678901234"))

    assertEquals("23790.12301 60000.000053 25000.456704 3 64670000013580",
      formatter.format("23790123016000000005325000456704364670000013580"))

    assertEquals("812345678901 812345678901 812345678901 812345678901",
      formatter.format("812345678901812345678901812345678901812345678901"))

    assertEquals("23790.12301 60000.000053 25000.456704 3 64670000013580",
      formatter.format("23790.12301 60000.000053 25000.456704 3 64670000013580"))

    assertEquals("812345678901 812345678901 812345678901 812345678901",
      formatter.format("812345678901 812345678901 812345678901 812345678901"))
  }

  @Test
  fun `Can unformat`() {
    assertEquals("12345123451234512345612345123456712345678901234",
      formatter.unformat("12345.12345 12345.123456 12345.123456 7 12345678901234"))

    assertEquals("23790123016000000005325000456704364670000013580",
      formatter.unformat("23790.12301 60000.000053 25000.456704 3 64670000013580"))

    assertEquals("812345678901812345678901812345678901812345678901",
      formatter.unformat("812345678901 812345678901 812345678901 812345678901"))

    assertEquals("23790123016000000005325000456704364670000013580",
      formatter.unformat("23790123016000000005325000456704364670000013580"))

    assertEquals("812345678901812345678901812345678901812345678901",
      formatter.unformat("812345678901812345678901812345678901812345678901"))
  }

  @Test
  fun `Can check if value is formatted`() {
    assertTrue(formatter.isFormatted("12345.12345 12345.123456 12345.123456 7 12345678901234"))
    assertTrue(formatter.isFormatted("23790.12301 60000.000053 25000.456704 3 64670000013580"))

    assertFalse(formatter.isFormatted("812345678901812345678901812345678901812345678901"))
    assertFalse(formatter.isFormatted("23790123016000000005325000456704364670000013580"))
    assertFalse(formatter.isFormatted("812345678901812345678901812345678901812345678901"))
  }

  @Test
  fun `Can check if value can be formatted`() {
    assertFalse(formatter.canBeFormatted("12345.12345 12345.123456 12345.123456 7 12345678901234"))
    assertFalse(formatter.canBeFormatted("23790.12301 60000.000053 25000.456704 3 64670000013580"))

    assertTrue(formatter.canBeFormatted("812345678901812345678901812345678901812345678901"))
    assertTrue(formatter.canBeFormatted("23790123016000000005325000456704364670000013580"))
    assertTrue(formatter.canBeFormatted("812345678901812345678901812345678901812345678901"))
  }
}
